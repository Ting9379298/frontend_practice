*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  font-family: "Jost", sans-serif;
  font-optical-sizing: auto;
  font-style: normal;
  color: var(--font-color);
}

:root {
  --font-color: rgb(253, 253, 253);
}

html {
  scroll-snap-type: y mandatory;
}

body {
  background-color: #202122;
}

nav {
  height: 50px;
  width: 100vw;
  padding: 0 36px;
  position: fixed;

  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

#logo {
  font-weight: 700;
  font-size: 1.4rem;
  letter-spacing: -1px;
  color: #7d828a;
}

#nav-links {
  font-size: 1.1rem;
  display: flex;
  gap: 18px;
}

a {
  cursor: pointer;
  text-decoration: none;
  color: var(--font-color);
}

section {
  scroll-snap-align: start;
  scroll-snap-stop: always;
  padding: 60px 330px;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 40px;
}

h1 {
  font-size: 2.5rem;
  text-align: center;
}

section p {
  text-align: justify;
  font-size: 1.2rem;
  font-weight: 300;
}

.cards {
  display: flex;
  justify-content: space-between;
  gap: 54px;
}

@keyframes spin {
  form {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.card {
  background-color: #373a3c;
  border-radius: 20px;
  width: 200px;
  height: 220px;
  position: relative;
  transition-duration: 0.8s;
}

.card:hover {
  background-color: #4f5356;
}

.card::after,
.card::before {
  content: "";
  width: calc(100% + 6px);
  height: calc(100% + 6px);
  position: absolute;
  left: -3px;
  top: -3px;
  background-image: conic-gradient(
    from var(--angle),
    #ff4545,
    #fcf596,
    #fbd288,
    #ff9c73,
    #ff4545
  );
  opacity: 60%;
  border-radius: 23px;
  z-index: -1;
  transition-duration: 0.6s;
}

.card::before {
  filter: blur(5px);
  opacity: 60%;
}

.card:hover::after,
.card:hover::before {
  opacity: 100%;
  animation: spin 2s linear infinite;
}
